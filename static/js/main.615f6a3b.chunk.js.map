{"version":3,"sources":["router.js","style/GlobalStyled.js","Components/Header.js","Components/Footer.js","api.js","Components/Loader.js","Components/Home/MainBanner.js","Components/Container.js","Components/Home/Movies.js","Components/Home/Home.js","Components/PageTitle.js","NotFound.js","Components/Search/Search.js","Components/Detail/Detail.js","Components/ScrollTop.js","App.js","index.js"],"names":["router","mainColor","mainWeight","moSize","GlobalStyled","createGlobalStyle","reset","SHeader","styled","header","props","bgColor","Logo","h3","MenuWrap","ul","Menu","li","Header","useState","bg","setBg","window","addEventListener","sct","pageYOffset","to","SFooter","div","Footer","api","axios","create","baseURL","params","api_key","language","movieApi","get","id","movie_id","term","query","encodeURIComponent","Wrap","loadingAni","keyframes","Loading","Loader","SMainBanner","section","Title","Desc","p","Button","button","MoreBanner","moreHeight","ConWrap","MoreTitle","MoreDesc","CoverImg","BlackBg","MainBanner","data","num","height","setHeight","moreNum","setMoreNum","style","backgroundImage","backdrop_path","title","overview","slice","onClick","scrollTo","top","left","behavior","icon","faTimes","SContainer","Container","children","MovieTitle","SwiperCore","use","Navigation","Movies","movieData","module","breakpoints","slidesPerView","spaceBetween","navigation","map","play","Section","Home","nowPlay","setNowplay","upComing","setUpComing","getReview","setgetReview","loading","setLoading","useEffect","a","nowPlaying","results","console","log","PageTitle","BoxWrap","Box","Excla","ErrorTitle","ErrorsubTitle","NotFound","Form","form","Input","input","Con","ConBg","Search","search","setSearch","error","setError","noSearch","setNoSearch","useForm","mode","register","getValues","handleSubmit","onSubmit","length","required","type","placeholder","searchData","background","Info","Video","iframe","VideoWrap","Detail","useParams","setMovieData","videoData","setVideoData","MovieDetail","poster_path","release_date","genres","genre","name","runtime","videoWrapTop","document","querySelector","offsetTop","className","src","key","ScrollTop","location","useLocation","App","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.615f6a3b.chunk.js","sourcesContent":["export const router = {\r\n  home: \"/\",\r\n  detail: \"/detail/:id\",\r\n  search: \"/search\",\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { reset } from \"styled-reset\";\r\n\r\nexport const mainColor = {\r\n  fontColor: \"white\",\r\n  bgColor: \"#1d1d1d\",\r\n};\r\n\r\nexport const mainWeight = {\r\n  titleWeight: 600,\r\n};\r\n\r\nexport const moSize = {\r\n  padding: \"20px\",\r\n  titleSize: \"45px\",\r\n  descSize: \"16px\",\r\n  movieTitle: \"14px\",\r\n};\r\n\r\nexport const GlobalStyled = createGlobalStyle`\r\n    ${reset}\r\n\r\n    *{box-sizing:border-box;}\r\n\r\n    a{\r\n        color: ${mainColor.fontColor};\r\n        text-decoration:none;\r\n\r\n    }\r\n\r\n    body{\r\n        font-family: 'Noto Sans KR', sans-serif;\r\n        background-color: ${mainColor.bgColor};\r\n        color: ${mainColor.fontColor};\r\n        letter-spacing:-1px;\r\n        word-break: 45px;\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { router } from \"../router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { mainWeight, moSize } from \"../style/GlobalStyled\";\r\n\r\nconst SHeader = styled.header`\r\n  width: 100%;\r\n  height: 60px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  padding: 0 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: ${(props) => props.bgColor};\r\n  transition: 0.5s;\r\n  @media screen and (max-width: 500px) {\r\n    padding: ${moSize.padding};\r\n    z-index: 100;\r\n  }\r\n  z-index: 100;\r\n`;\r\n\r\nconst Logo = styled.h3`\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n  a {\r\n    color: crimson;\r\n  }\r\n`;\r\n\r\nconst MenuWrap = styled.ul`\r\n  display: flex;\r\n`;\r\nconst Menu = styled.li`\r\n  &:nth-child(1) {\r\n    margin-right: 50px;\r\n    font-weight: ${mainWeight.titleWeight};\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    &:nth-child(1) {\r\n      margin-right: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Header = () => {\r\n  const [bg, setBg] = useState();\r\n\r\n  const handleScroll = () => {\r\n    const sct = window.pageYOffset;\r\n    // console.log(sct);\r\n    if (sct >= 200) {\r\n      setBg(\"rgba(0,0,0,0.7)\");\r\n    } else {\r\n      setBg(\"transparent\");\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", handleScroll);\r\n\r\n  return (\r\n    <SHeader bgColor={bg}>\r\n      <Logo>\r\n        <Link to={router.home}>PATI</Link>\r\n      </Logo>\r\n\r\n      <MenuWrap>\r\n        <Menu>\r\n          <Link to={router.home}>홈</Link>\r\n        </Menu>\r\n        <Menu>\r\n          <Link to={router.search}>영화 검색</Link>\r\n        </Menu>\r\n      </MenuWrap>\r\n    </SHeader>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst SFooter = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-top: 1px solid #555;\r\n  font-size: 14px;\r\n  color: gray;\r\n  margin-top: 200px;\r\n  @media screen and (max-width: 500px) {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nexport const Footer = () => {\r\n  return <SFooter>&copy; copyright Pncoding</SFooter>;\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n  params: {\r\n    api_key: \"933630eb672b2bb0350bc6e4a59c0082\",\r\n    language: \"ko-KR\",\r\n  },\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  getReview: () => api.get(\"movie/reviews\"),\r\n  detail: (id) => api.get(`movie/${id}`),\r\n  video: (movie_id) => api.get(`/movie/${movie_id}/videos`),\r\n  search: (term) =>\r\n    api.get(`search/movie`, {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\n// 현재 상영영화\r\n// 개봉 예정\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst Wrap = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst loadingAni = keyframes`\r\n    100%{\r\n        transform:rotate(360deg)\r\n        \r\n    }\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  border: 10px solid crimson;\r\n  border-radius: 50%;\r\n  border-color: crimson transparent transparent transparent;\r\n  animation: ${loadingAni} 1s infinite;\r\n`;\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <Wrap>\r\n      <Loading></Loading>\r\n    </Wrap>\r\n  );\r\n};\r\n","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { mainWeight, moSize } from \"../../style/GlobalStyled\";\r\nimport { mainColor } from \"../../style/GlobalStyled\";\r\n\r\nconst SMainBanner = styled.section`\r\n  height: 80vh;\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 220px 80px;\r\n  @media screen and (max-width: 500px) {\r\n    padding: 220px 20px;\r\n  }\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  max-width: 550px;\r\n  width: 100%;\r\n  font-size: 70px;\r\n  font-weight: ${mainWeight.titleWeight};\r\n  line-height: 1.2em;\r\n  margin-bottom: 25px;\r\n  text-shadow: 0 0 15px rgba(0, 0, 0, 0.5);\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 45px;\r\n    margin-bottom: 15px;\r\n    margin-top: 100px;\r\n  }\r\n  position: relative;\r\n  z-index: 10;\r\n`;\r\nconst Desc = styled.p`\r\n  max-width: 600px;\r\n  width: 100%;\r\n  font-size: 18px;\r\n  opacity: 0.9;\r\n  line-height: 1.4em;\r\n  text-shadow: 0 0 15px rgba(0, 0, 0, 0.7);\r\n  @media screen and (max-width: 500px) {\r\n    font-size: ${moSize.descSize};\r\n  }\r\n  position: relative;\r\n  z-index: 10;\r\n`;\r\nconst Button = styled.button`\r\n  all: unset;\r\n  padding: 20px 50px;\r\n  border: 1px solid #fff;\r\n  font-weight: ${mainWeight.titleWeight};\r\n  margin-top: 30px;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  span {\r\n    transition: 0.3s;\r\n  }\r\n  &:hover {\r\n    background-color: ${mainColor.fontColor};\r\n    color: ${mainColor.bgColor};\r\n    span {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    display: none;\r\n  }\r\n  position: relative;\r\n  z-index: 10;\r\n`;\r\n\r\nconst MoreBanner = styled.section`\r\n  height: ${(props) => props.moreHeight};\r\n  background-color: #111;\r\n  margin-top: 100px;\r\n  padding-left: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  overflow: hidden;\r\n  transition: 0.5s;\r\n  /* display: none; */\r\n  @media screen and (max-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst ConWrap = styled.div`\r\n  width: 30%;\r\n`;\r\nconst MoreTitle = styled.div`\r\n  font-size: 80px;\r\n  font-weight: ${mainWeight.titleWeight};\r\n  line-height: 1.2em;\r\n  margin: 50px 0 30px 0;\r\n`;\r\nconst MoreDesc = styled.div`\r\n  font-size: 20px;\r\n  font-weight: ${mainWeight.titleWeight};\r\n  line-height: 2em;\r\n  opacity: 0.8;\r\n`;\r\nconst CoverImg = styled.div`\r\n  width: 65%;\r\n  height: 100%;\r\n  background-position: center;\r\n  background-size: cover;\r\n  div {\r\n    float: right;\r\n    font-size: 30px;\r\n    margin: 15px 15px 0 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst BlackBg = styled.div`\r\n  width: 100%;\r\n  height: 60vh;\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  /* background-color: black; */\r\n  background: linear-gradient(0deg, black, transparent);\r\n`;\r\n\r\nexport const MainBanner = ({ data, num }) => {\r\n  const [height, setHeight] = useState(0);\r\n  const [moreNum, setMoreNum] = useState(0);\r\n\r\n  const onClickMore = () => {\r\n    if (moreNum === 0) {\r\n      setHeight(\"80vh\");\r\n      window.scrollTo({\r\n        top: 500,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n      setMoreNum(moreNum + 1);\r\n    } else if (moreNum === 1) {\r\n      setHeight(\"0\");\r\n      setMoreNum(moreNum - 1);\r\n    }\r\n  };\r\n\r\n  const onClickClose = () => {\r\n    setHeight(\"0\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SMainBanner\r\n        style={{\r\n          backgroundImage: `URL(\r\n      https://image.tmdb.org/t/p/original${data[`${num}`].backdrop_path}\r\n)`,\r\n        }}\r\n      >\r\n        <Title> {data[`${num}`].title}</Title>\r\n        <Desc>{data[`${num}`].overview.slice(0, 70) + \"...\"}</Desc>\r\n        <BlackBg></BlackBg>\r\n        <Button onClick={onClickMore}>\r\n          더 보기 <span>&rarr;</span>\r\n        </Button>\r\n      </SMainBanner>\r\n\r\n      <MoreBanner moreHeight={height}>\r\n        <ConWrap>\r\n          <MoreTitle>{data[`${num}`].title}</MoreTitle>\r\n          <MoreDesc>{data[`${num}`].overview.slice(0, 300) + \"...\"}</MoreDesc>\r\n        </ConWrap>\r\n        <CoverImg\r\n          style={{\r\n            backgroundImage: `url( https://image.tmdb.org/t/p/original${\r\n              data[`${num}`].backdrop_path\r\n            })`,\r\n          }}\r\n        >\r\n          <div onClick={onClickClose}>\r\n            <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\r\n          </div>\r\n        </CoverImg>\r\n      </MoreBanner>\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { moSize } from \"../style/GlobalStyled\";\r\n\r\nconst SContainer = styled.section`\r\n  padding: 0 80px;\r\n  height: 100%;\r\n  @media screen and (max-width: 500px) {\r\n    padding: ${moSize.padding};\r\n  }\r\n`;\r\n\r\nexport const Container = ({ children }) => {\r\n  return <SContainer>{children}</SContainer>;\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation } from \"swiper\";\r\nimport { mainWeight, moSize } from \"../../style/GlobalStyled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../style/swiper.css\";\r\n\r\nconst Title = styled.h3`\r\n  font-size: 35px;\r\n  font-weight: ${mainWeight.titleWeight};\r\n  margin: 80px 0px 30px 0px;\r\n  @media screen and (max-with: 500px) {\r\n    font-size: 25px;\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nconst MovieTitle = styled.div`\r\n  font-size: 18px;\r\n  margin-top: 15px;\r\n  @media screen and (max-with: 500px) {\r\n    font-size: ${moSize.movieTitle};\r\n  }\r\n`;\r\n\r\nconst CoverImg = styled.div`\r\n  height: 180px;\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\nexport const Movies = ({ movieData, title }) => {\r\n  const params = {\r\n    breakpoints: {\r\n      1024: { slidesPerView: 5.2, spaceBetween: 20 },\r\n      320: { slidesPerView: 2.1, spaceBetween: 10 },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title> {title}</Title>\r\n      <Swiper\r\n        module={[Navigation]}\r\n        {...params}\r\n        navigation\r\n        slidesPerView={5}\r\n        spaceBetween={20}\r\n      >\r\n        {movieData.map((play) => (\r\n          <SwiperSlide key={play.id}>\r\n            {/* <Link to={router.detail`${play.id}`}> */}\r\n            <Link to={`/detail/${play.id}`}>\r\n              <CoverImg\r\n                style={{\r\n                  backgroundImage: `URL(https://image.tmdb.org/t/p/original${play.backdrop_path})`,\r\n                }}\r\n              />\r\n              <MovieTitle>{play.title}</MovieTitle>\r\n            </Link>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { movieApi } from \"../../api\";\r\nimport { Loader } from \"../Loader\";\r\nimport { MainBanner } from \"./MainBanner\";\r\nimport { Container } from \"../Container\";\r\nimport { Movies } from \"./Movies\";\r\n// import { movieData } from \"./movieApi\"\r\n// import { movieApi } from \"./Movies\";\r\n\r\n// console.log(movieApi.nowPlaying());\r\n// console.log(movieApi.upComing());\r\n\r\nconst Wrap = styled.div``;\r\n\r\nconst Section = styled.section``;\r\n\r\nexport const Home = () => {\r\n  // *과제\r\n  // useState를 이용하여 results 저장하고,\r\n  // useEffect밖으로 변수 호출할 수 있도록 만들기\r\n  //  upComing 콘솔로 불러오기\r\n\r\n  const [nowPlay, setNowplay] = useState();\r\n  const [upComing, setUpComing] = useState();\r\n  const [getReview, setgetReview] = useState();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const movieNum = 0;\r\n\r\n  useEffect(() => {\r\n    const movieData = async () => {\r\n      try {\r\n        //   console.log(await movieApi.nowPlaying());\r\n        const {\r\n          data: { results: nowPlaying },\r\n        } = await movieApi.nowPlaying();\r\n        //   console.log(results);\r\n\r\n        setNowplay(nowPlaying);\r\n\r\n        const {\r\n          data: { results: upComing },\r\n        } = await movieApi.upComing();\r\n        setUpComing(upComing);\r\n\r\n        const {\r\n          data: { results: getReview },\r\n        } = await movieApi.upComing();\r\n        setgetReview(getReview);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    movieData();\r\n  }, []);\r\n\r\n  // console.log(\"현재상영영화\", nowPlay);\r\n  // console.log(\"개봉예정영화\", upComing);\r\n\r\n  // console.log(nowPlay && nowPlay[0]);\r\n\r\n  // *mainbanner컴포넌트 분해하기 과제\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title> 홈 | PN movie</title>\r\n      </Helmet>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {nowPlay && (\r\n            <Wrap>\r\n              <MainBanner data={nowPlay} num={movieNum} />\r\n              <Section>\r\n                <Container>\r\n                  <Movies movieData={nowPlay} title=\"현재 상영 영화\" />\r\n                  <Movies movieData={upComing} title=\"개봉 예정 영화\" />\r\n                  <Movies movieData={getReview} title=\"리뷰 많은 영화\" />\r\n                  <Movies movieData={upComing} title=\"최근 상영 영화\" />\r\n                </Container>\r\n              </Section>\r\n            </Wrap>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { Helmet } from \"react-helmet-async\";\r\n\r\nexport const PageTitle = ({ title }) => {\r\n  return (\r\n    <Helmet>\r\n      <title> {title} 영화리뷰 | PN movie</title>\r\n    </Helmet>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst BoxWrap = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: black;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Excla = styled.div`\r\n  width: 75px;\r\n  height: 75px;\r\n  color: white;\r\n  font-size: 40px;\r\n  margin-bottom: 50px;\r\n  border: 1px solid white;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity: 0.8;\r\n`;\r\nconst ErrorTitle = styled.div`\r\n  font-size: 50px;\r\n  color: crimson;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst ErrorsubTitle = styled.div`\r\n  font-size: 20px;\r\n  color: white;\r\n  margin-top: 25px;\r\n  font-weight: 200;\r\n  opacity: 0.7;\r\n  letter-spacing: 2px;\r\n`;\r\n\r\nexport const NotFound = () => {\r\n  return (\r\n    <BoxWrap>\r\n      <Box>\r\n        <Excla>!</Excla>\r\n\r\n        <ErrorTitle>Error</ErrorTitle>\r\n        <ErrorsubTitle>Sorry, page not found</ErrorsubTitle>\r\n      </Box>\r\n    </BoxWrap>\r\n  );\r\n};\r\n","import { PageTitle } from \"../PageTitle\";\r\nimport { Container } from \"../Container\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { movieApi } from \"../../api\";\r\nimport { useState } from \"react\";\r\nimport { NotFound } from \"../../NotFound\";\r\nimport { Loader } from \"../Loader\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Form = styled.form`\r\n  margin-top: 120px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  width: 100%;\r\n  height: 60px;\r\n  border: 1px solid #555;\r\n  padding: 10px 20px;\r\n  box-sizing: border-box;\r\n  &::placeholder {\r\n    font-size: 18px;\r\n  }\r\n  font-size: 18px;\r\n`;\r\n\r\nconst ConWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  row-gap: 30px;\r\n  column-gap: 30px;\r\n  margin-top: 50px;\r\n  @media screen and (max-width: 500px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`;\r\nconst Con = styled.div``;\r\nconst ConBg = styled.div`\r\n  height: 180px;\r\n`;\r\nconst Title = styled.h3`\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const Search = () => {\r\n  const [search, setSearch] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const [error, setError] = useState(false);\r\n  const [noSearch, setNoSearch] = useState(\"\");\r\n\r\n  const { register, getValues, handleSubmit } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onSubmit = async () => {\r\n    const { term } = getValues();\r\n    setLoading(true);\r\n\r\n    // console.log(term);\r\n\r\n    // api에서 search 불러와서 매개변수로 term전달하여 결과값을 콘솔로 찍기\r\n\r\n    try {\r\n      // console.log(await movieApi.search(term));\r\n      const {\r\n        data: { results },\r\n      } = await movieApi.search(term);\r\n\r\n      if (results.length <= 0) {\r\n        setNoSearch(\"검색 결과가 없습니다.\");\r\n      } else {\r\n        setNoSearch(\"\");\r\n        setSearch(results);\r\n      }\r\n\r\n      setSearch(results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  // console.log(search);\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle title=\"영화검색\" />\r\n      <Container>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Input\r\n            {...register(\"term\", {\r\n              required: true,\r\n            })}\r\n            type=\"text\"\r\n            placeholder=\"검색...\"\r\n          ></Input>\r\n        </Form>\r\n\r\n        {error ? (\r\n          <NotFound />\r\n        ) : (\r\n          <div>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <ConWrap>\r\n                {noSearch === \"\" && search ? (\r\n                  search.map((searchData) => (\r\n                    <Link to={`/detail/${searchData.id}`} key={searchData.id}>\r\n                      <Con>\r\n                        <ConBg\r\n                          style={{\r\n                            background: `url(${\r\n                              searchData.backdrop_path\r\n                                ? `https://image.tmdb.org/t/p/original${searchData.backdrop_path}`\r\n                                : `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTrx5-KvfGEWBiWrNz_dHvCCucvnw1uyypUAQ&usqp=CAU`\r\n                            } )center /cover`,\r\n                          }}\r\n                        ></ConBg>\r\n                        <Title>{searchData.title}</Title>\r\n                      </Con>\r\n                    </Link>\r\n                  ))\r\n                ) : (\r\n                  <h3>{noSearch}</h3>\r\n                )}\r\n              </ConWrap>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { movieApi } from \"../../api\";\r\nimport { NotFound } from \"../../NotFound\";\r\nimport { mainWeight } from \"../../style/GlobalStyled\";\r\nimport { Loader } from \"../Loader\";\r\nimport { PageTitle } from \"../PageTitle\";\r\nimport { mainColor } from \"../../style/GlobalStyled\";\r\nimport { Container } from \"../Container\";\r\nimport { moSize } from \"../../style/GlobalStyled\";\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin-top: 80px;\r\n  @media screen and (max-width: 500px) {\r\n    flex-direction: column;\r\n    margin-top: 60px;\r\n  }\r\n`;\r\n\r\nconst CoverImg = styled.div`\r\n  width: 50%;\r\n  height: 80vh;\r\n  background-size: cover;\r\n  background-position: top;\r\n  @media screen and (max-width: 500px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst ConWrap = styled.div`\r\n  width: 50%;\r\n  margin-left: 50px;\r\n  @media screen and (max-width: 500px) {\r\n    width: 100%;\r\n    margin-left: 0;\r\n  }\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 60px;\r\n  font-weight: 600;\r\n  margin-bottom: 30px;\r\n  margin-top: 30px;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 30px;\r\n  }\r\n`;\r\nconst Info = styled.div`\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 14px;\r\n    font-weight: 300;\r\n  }\r\n`;\r\nconst Desc = styled.div`\r\n  line-height: 2.2rem;\r\n  font-size: 20px;\r\n  opacity: 0.7;\r\n  margin-top: 50px;\r\n  font-weight: 300;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 17px;\r\n    line-height: 2rem;\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  all: unset;\r\n  padding: 20px 50px;\r\n  border: 1px solid #fff;\r\n  font-weight: ${mainWeight.titleWeight};\r\n  margin-top: 30px;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  span {\r\n    transition: 0.3s;\r\n  }\r\n  &:hover {\r\n    background-color: ${mainColor.fontColor};\r\n    color: ${mainColor.bgColor};\r\n    span {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    padding: 18px 30px;\r\n    font-size: ${moSize.movieTitle};\r\n  }\r\n`;\r\n\r\nconst Video = styled.iframe`\r\n  width: 100%;\r\n  height: 80vh;\r\n  @media screen and (max-width: 500px) {\r\n    height: 55vh;\r\n  }\r\n`;\r\n\r\nconst VideoWrap = styled.div`\r\n  height: 100vh;\r\n  padding: 200px 0;\r\n  @media screen and (max-width: 500px) {\r\n    height: 70vh;\r\n    padding: 50px 0;\r\n  }\r\n`;\r\n\r\nexport const Detail = () => {\r\n  // const location = useLocation();\r\n  // console.log(location);\r\n  // 매우 귀찮음\r\n\r\n  const { id } = useParams();\r\n  const [movieData, setMovieData] = useState();\r\n  const [videoData, setVideoData] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // console.log(id);\r\n\r\n  useEffect(() => {\r\n    const MovieDetail = async () => {\r\n      try {\r\n        // console.log(await movieApi.detail(566525));\r\n        const { data: movieData } = await movieApi.detail(id);\r\n        setMovieData(movieData);\r\n        // console.log(data);\r\n\r\n        // console.log(await movieApi.video(id));\r\n        const {\r\n          data: { results },\r\n        } = await movieApi.video(id);\r\n        setVideoData(results[0]);\r\n        // console.log(results[0].key);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        // console.log(error);\r\n        <NotFound></NotFound>;\r\n      }\r\n    };\r\n    MovieDetail();\r\n  }, [id]);\r\n\r\n  const onClickVideo = () => {\r\n    const videoWrapTop = document.querySelector(\".video_wrap\").offsetTop;\r\n    // console.log(videoWrapTop);\r\n\r\n    window.scrollTo({\r\n      top: videoWrapTop,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieData && (\r\n            <>\r\n              <PageTitle title=\"영화리뷰\"></PageTitle>\r\n              <Container>\r\n                <Wrap>\r\n                  <CoverImg\r\n                    style={{\r\n                      background: `url(https://image.tmdb.org/t/p/original/${movieData.poster_path}) center/cover`,\r\n                    }}\r\n                  ></CoverImg>\r\n                  <ConWrap>\r\n                    <Title>{movieData.title}</Title>\r\n                    <Info>{movieData.release_date}</Info>\r\n                    <Info>\r\n                      {movieData.genres.map((genre) => genre.name + \",\")}\r\n                    </Info>\r\n                    <Info>{movieData.runtime}분</Info>\r\n                    <Desc>{movieData.overview}</Desc>\r\n                    <Button onClick={onClickVideo}>\r\n                      예고편 보기 <span>&rarr;</span>\r\n                    </Button>\r\n                  </ConWrap>\r\n                </Wrap>\r\n              </Container>\r\n            </>\r\n          )}\r\n\r\n          {videoData && (\r\n            <Container>\r\n              <VideoWrap className=\"video_wrap\">\r\n                <Video src={`https://www.youtube.com/embed/${videoData.key}`} />\r\n              </VideoWrap>\r\n            </Container>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport const ScrollTop = () => {\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [location]);\r\n\r\n  return null;\r\n};\r\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { router } from \"./router\";\nimport { GlobalStyled } from \"./style/GlobalStyled\";\nimport { Header } from \"./Components/Header\";\nimport { Footer } from \"./Components/Footer\";\nimport { Home } from \"./Components/Home/Home\";\nimport { Search } from \"./Components/Search/Search\";\nimport { Detail } from \"./Components/Detail/Detail\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { NotFound } from \"./NotFound\";\nimport { ScrollTop } from \"./Components/ScrollTop\";\n\nfunction App() {\n  return (\n    <HelmetProvider>\n      <Router>\n        <GlobalStyled />\n        <ScrollTop />\n        <Header />\n        <Switch>\n          <Route path={router.home} exact>\n            <Home></Home>\n          </Route>\n\n          <Route path={router.detail}>\n            <Detail></Detail>\n          </Route>\n\n          <Route path={router.search}>\n            <Search></Search>\n          </Route>\n\n          <Route>\n            <NotFound></NotFound>\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}